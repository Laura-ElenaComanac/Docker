{"ast":null,"code":"import _objectWithoutProperties from\"/Users/laura-elena.olaru/Downloads/FinalDocker/my-ionic-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";import React,{useContext}from'react';import{Redirect,Route}from'react-router-dom';import{AuthContext}from'./AuthProvider';import{getLogger}from'../core';var log=getLogger('Login');export var PrivateRoute=function PrivateRoute(_ref){var Component=_ref.component,rest=_objectWithoutProperties(_ref,[\"component\"]);var _useContext=useContext(AuthContext),isAuthenticated=_useContext.isAuthenticated;log('render, isAuthenticated',isAuthenticated);return/*#__PURE__*/React.createElement(Route,Object.assign({},rest,{render:function render(props){if(isAuthenticated){// @ts-ignore\nreturn/*#__PURE__*/React.createElement(Component,props);}return/*#__PURE__*/React.createElement(Redirect,{to:{pathname:'/login'}});}}));};","map":{"version":3,"sources":["/Users/laura-elena.olaru/Downloads/FinalDocker/my-ionic-app/src/auth/PrivateRoute.tsx"],"names":["React","useContext","Redirect","Route","AuthContext","getLogger","log","PrivateRoute","Component","component","rest","isAuthenticated","props","pathname"],"mappings":"sMAAA,MAAOA,CAAAA,KAAP,EAAgBC,UAAhB,KAAkC,OAAlC,CAEA,OAASC,QAAT,CAAmBC,KAAnB,KAAgC,kBAAhC,CACA,OAASC,WAAT,KAAuC,gBAAvC,CACA,OAASC,SAAT,KAA0B,SAA1B,CAEA,GAAMC,CAAAA,GAAG,CAAGD,SAAS,CAAC,OAAD,CAArB,CAQA,MAAO,IAAME,CAAAA,YAAyC,CAAG,QAA5CA,CAAAA,YAA4C,MAAuC,IAAzBC,CAAAA,SAAyB,MAApCC,SAAoC,CAAXC,IAAW,8DAClET,UAAU,CAAYG,WAAZ,CADwD,CACtFO,eADsF,aACtFA,eADsF,CAE9FL,GAAG,CAAC,yBAAD,CAA4BK,eAA5B,CAAH,CACA,mBACE,oBAAC,KAAD,kBAAWD,IAAX,EAAiB,MAAM,CAAE,gBAAAE,KAAK,CAAI,CAChC,GAAID,eAAJ,CAAqB,CACnB;AACA,mBAAO,oBAAC,SAAD,CAAeC,KAAf,CAAP,CACD,CACD,mBAAO,oBAAC,QAAD,EAAU,EAAE,CAAE,CAAEC,QAAQ,CAAE,QAAZ,CAAd,EAAP,CACD,CAND,GADF,CASD,CAZM","sourcesContent":["import React, { useContext } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Redirect, Route } from 'react-router-dom';\r\nimport { AuthContext, AuthState } from './AuthProvider';\r\nimport { getLogger } from '../core';\r\n\r\nconst log = getLogger('Login');\r\n\r\nexport interface PrivateRouteProps {\r\n  component: PropTypes.ReactNodeLike;\r\n  path: string;\r\n  exact?: boolean;\r\n}\r\n\r\nexport const PrivateRoute: React.FC<PrivateRouteProps> = ({ component: Component, ...rest }) => {\r\n  const { isAuthenticated } = useContext<AuthState>(AuthContext);\r\n  log('render, isAuthenticated', isAuthenticated);\r\n  return (\r\n    <Route {...rest} render={props => {\r\n      if (isAuthenticated) {\r\n        // @ts-ignore\r\n        return <Component {...props} />;\r\n      }\r\n      return <Redirect to={{ pathname: '/login' }}/>\r\n    }}/>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}