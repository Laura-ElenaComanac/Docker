{"ast":null,"code":"import axios from'axios';import{authConfig,baseUrl,getLogger,withLogs}from'../core';var itemUrl=\"http://\".concat(baseUrl,\"/api/item\");export var getItems=function getItems(token){return withLogs(axios.get(itemUrl,authConfig(token)),'getItems');};export var createItem=function createItem(token,item){return withLogs(axios.post(itemUrl,item,authConfig(token)),'createItem');};export var updateItem=function updateItem(token,item){return withLogs(axios.put(\"\".concat(itemUrl,\"/\").concat(item._id),item,authConfig(token)),'updateItem');};var log=getLogger('ws');export var newWebSocket=function newWebSocket(token,onMessage){var ws=new WebSocket(\"ws://\".concat(baseUrl));ws.onopen=function(){log('web socket onopen');ws.send(JSON.stringify({type:'authorization',payload:{token:token}}));};ws.onclose=function(){log('web socket onclose');};ws.onerror=function(error){log('web socket onerror',error);};ws.onmessage=function(messageEvent){log('web socket onmessage');onMessage(JSON.parse(messageEvent.data));};return function(){ws.close();};};","map":{"version":3,"sources":["/Users/laura-elena.olaru/Downloads/FinalDocker/my-ionic-app/src/todo/itemApi.tsx"],"names":["axios","authConfig","baseUrl","getLogger","withLogs","itemUrl","getItems","token","get","createItem","item","post","updateItem","put","_id","log","newWebSocket","onMessage","ws","WebSocket","onopen","send","JSON","stringify","type","payload","onclose","onerror","error","onmessage","messageEvent","parse","data","close"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,UAAT,CAAqBC,OAArB,CAA8BC,SAA9B,CAAyCC,QAAzC,KAAyD,SAAzD,CAGA,GAAMC,CAAAA,OAAO,kBAAaH,OAAb,aAAb,CAEA,MAAO,IAAMI,CAAAA,QAAiD,CAAG,QAApDA,CAAAA,QAAoD,CAAAC,KAAK,CAAI,CACxE,MAAOH,CAAAA,QAAQ,CAACJ,KAAK,CAACQ,GAAN,CAAUH,OAAV,CAAmBJ,UAAU,CAACM,KAAD,CAA7B,CAAD,CAAwC,UAAxC,CAAf,CACD,CAFM,CAIP,MAAO,IAAME,CAAAA,UAAoE,CAAG,QAAvEA,CAAAA,UAAuE,CAACF,KAAD,CAAQG,IAAR,CAAiB,CACnG,MAAON,CAAAA,QAAQ,CAACJ,KAAK,CAACW,IAAN,CAAWN,OAAX,CAAoBK,IAApB,CAA0BT,UAAU,CAACM,KAAD,CAApC,CAAD,CAA+C,YAA/C,CAAf,CACD,CAFM,CAIP,MAAO,IAAMK,CAAAA,UAAoE,CAAG,QAAvEA,CAAAA,UAAuE,CAACL,KAAD,CAAQG,IAAR,CAAiB,CACnG,MAAON,CAAAA,QAAQ,CAACJ,KAAK,CAACa,GAAN,WAAaR,OAAb,aAAwBK,IAAI,CAACI,GAA7B,EAAoCJ,IAApC,CAA0CT,UAAU,CAACM,KAAD,CAApD,CAAD,CAA+D,YAA/D,CAAf,CACD,CAFM,CASP,GAAMQ,CAAAA,GAAG,CAAGZ,SAAS,CAAC,IAAD,CAArB,CAEA,MAAO,IAAMa,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACT,KAAD,CAAgBU,SAAhB,CAA2D,CACrF,GAAMC,CAAAA,EAAE,CAAG,GAAIC,CAAAA,SAAJ,gBAAsBjB,OAAtB,EAAX,CACAgB,EAAE,CAACE,MAAH,CAAY,UAAM,CAChBL,GAAG,CAAC,mBAAD,CAAH,CACAG,EAAE,CAACG,IAAH,CAAQC,IAAI,CAACC,SAAL,CAAe,CAAEC,IAAI,CAAE,eAAR,CAAyBC,OAAO,CAAE,CAAElB,KAAK,CAALA,KAAF,CAAlC,CAAf,CAAR,EACD,CAHD,CAIAW,EAAE,CAACQ,OAAH,CAAa,UAAM,CACjBX,GAAG,CAAC,oBAAD,CAAH,CACD,CAFD,CAGAG,EAAE,CAACS,OAAH,CAAa,SAAAC,KAAK,CAAI,CACpBb,GAAG,CAAC,oBAAD,CAAuBa,KAAvB,CAAH,CACD,CAFD,CAGAV,EAAE,CAACW,SAAH,CAAe,SAAAC,YAAY,CAAI,CAC7Bf,GAAG,CAAC,sBAAD,CAAH,CACAE,SAAS,CAACK,IAAI,CAACS,KAAL,CAAWD,YAAY,CAACE,IAAxB,CAAD,CAAT,CACD,CAHD,CAIA,MAAO,WAAM,CACXd,EAAE,CAACe,KAAH,GACD,CAFD,CAGD,CAnBM","sourcesContent":["import axios from 'axios';\nimport { authConfig, baseUrl, getLogger, withLogs } from '../core';\nimport { ItemProps } from './ItemProps';\n\nconst itemUrl = `http://${baseUrl}/api/item`;\n\nexport const getItems: (token: string) => Promise<ItemProps[]> = token => {\n  return withLogs(axios.get(itemUrl, authConfig(token)), 'getItems');\n}\n\nexport const createItem: (token: string, item: ItemProps) => Promise<ItemProps[]> = (token, item) => {\n  return withLogs(axios.post(itemUrl, item, authConfig(token)), 'createItem');\n}\n\nexport const updateItem: (token: string, item: ItemProps) => Promise<ItemProps[]> = (token, item) => {\n  return withLogs(axios.put(`${itemUrl}/${item._id}`, item, authConfig(token)), 'updateItem');\n}\n\ninterface MessageData {\n  type: string;\n  payload: ItemProps;\n}\n\nconst log = getLogger('ws');\n\nexport const newWebSocket = (token: string, onMessage: (data: MessageData) => void) => {\n  const ws = new WebSocket(`ws://${baseUrl}`);\n  ws.onopen = () => {\n    log('web socket onopen');\n    ws.send(JSON.stringify({ type: 'authorization', payload: { token } }));\n  };\n  ws.onclose = () => {\n    log('web socket onclose');\n  };\n  ws.onerror = error => {\n    log('web socket onerror', error);\n  };\n  ws.onmessage = messageEvent => {\n    log('web socket onmessage');\n    onMessage(JSON.parse(messageEvent.data));\n  };\n  return () => {\n    ws.close();\n  }\n}\n"]},"metadata":{},"sourceType":"module"}